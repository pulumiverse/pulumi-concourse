{
    "name": "concourse",
    "description": "A Pulumi package for creating and managing a Concourse instance \u0026 its pipelines.",
    "keywords": [
        "pulumi",
        "concourse"
    ],
    "homepage": "https://pulumi.io",
    "license": "Apache-2.0",
    "attribution": "This Pulumi package is based on the [`concourse` Terraform Provider](https://github.com/chanzuckerberg/terraform-provider-concourse).",
    "repository": "https://github.com/ringods/pulumi-concourse",
    "meta": {
        "moduleFormat": "(.*)(?:/[^/]*)"
    },
    "config": {
        "variables": {
            "password": {
                "type": "string",
                "description": "Password, do not use if using target\n"
            },
            "target": {
                "type": "string",
                "description": "Target as in 'fly --target', do not use if using team/username/password\n"
            },
            "team": {
                "type": "string",
                "description": "Team name, do not use if using target\n"
            },
            "url": {
                "type": "string",
                "description": "URL, do not use if using target\n"
            },
            "username": {
                "type": "string",
                "description": "Username, do not use if using target\n"
            }
        }
    },
    "provider": {
        "description": "The provider type for the concourse package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n",
        "properties": {
            "password": {
                "type": "string",
                "description": "Password, do not use if using target\n"
            },
            "target": {
                "type": "string",
                "description": "Target as in 'fly --target', do not use if using team/username/password\n"
            },
            "team": {
                "type": "string",
                "description": "Team name, do not use if using target\n"
            },
            "url": {
                "type": "string",
                "description": "URL, do not use if using target\n"
            },
            "username": {
                "type": "string",
                "description": "Username, do not use if using target\n"
            }
        },
        "inputProperties": {
            "password": {
                "type": "string",
                "description": "Password, do not use if using target\n"
            },
            "target": {
                "type": "string",
                "description": "Target as in 'fly --target', do not use if using team/username/password\n"
            },
            "team": {
                "type": "string",
                "description": "Team name, do not use if using target\n"
            },
            "url": {
                "type": "string",
                "description": "URL, do not use if using target\n"
            },
            "username": {
                "type": "string",
                "description": "Username, do not use if using target\n"
            }
        }
    },
    "resources": {
        "concourse:index/pipeline:Pipeline": {
            "properties": {
                "isExposed": {
                    "type": "boolean"
                },
                "isPaused": {
                    "type": "boolean"
                },
                "json": {
                    "type": "string"
                },
                "pipelineConfig": {
                    "type": "string"
                },
                "pipelineConfigFormat": {
                    "type": "string"
                },
                "pipelineName": {
                    "type": "string"
                },
                "teamName": {
                    "type": "string"
                },
                "yaml": {
                    "type": "string"
                }
            },
            "required": [
                "isExposed",
                "isPaused",
                "json",
                "pipelineConfig",
                "pipelineConfigFormat",
                "pipelineName",
                "teamName",
                "yaml"
            ],
            "inputProperties": {
                "isExposed": {
                    "type": "boolean"
                },
                "isPaused": {
                    "type": "boolean"
                },
                "pipelineConfig": {
                    "type": "string"
                },
                "pipelineConfigFormat": {
                    "type": "string"
                },
                "pipelineName": {
                    "type": "string"
                },
                "teamName": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "isExposed",
                "isPaused",
                "pipelineConfig",
                "pipelineConfigFormat",
                "pipelineName",
                "teamName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Pipeline resources.\n",
                "properties": {
                    "isExposed": {
                        "type": "boolean"
                    },
                    "isPaused": {
                        "type": "boolean"
                    },
                    "json": {
                        "type": "string"
                    },
                    "pipelineConfig": {
                        "type": "string"
                    },
                    "pipelineConfigFormat": {
                        "type": "string"
                    },
                    "pipelineName": {
                        "type": "string"
                    },
                    "teamName": {
                        "type": "string"
                    },
                    "yaml": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "concourse:index/team:Team": {
            "properties": {
                "members": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "owners": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "pipelineOperators": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "teamName": {
                    "type": "string"
                },
                "viewers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "owners",
                "teamName"
            ],
            "inputProperties": {
                "members": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "owners": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "pipelineOperators": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "teamName": {
                    "type": "string"
                },
                "viewers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "requiredInputs": [
                "owners",
                "teamName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Team resources.\n",
                "properties": {
                    "members": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "owners": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "pipelineOperators": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "teamName": {
                        "type": "string"
                    },
                    "viewers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            }
        }
    },
    "functions": {
        "concourse:index/getPipeline:getPipeline": {
            "inputs": {
                "description": "A collection of arguments for invoking getPipeline.\n",
                "properties": {
                    "pipelineName": {
                        "type": "string"
                    },
                    "teamName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "pipelineName",
                    "teamName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPipeline.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "isExposed": {
                        "type": "boolean"
                    },
                    "isPaused": {
                        "type": "boolean"
                    },
                    "json": {
                        "type": "string"
                    },
                    "pipelineName": {
                        "type": "string"
                    },
                    "teamName": {
                        "type": "string"
                    },
                    "yaml": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "isExposed",
                    "isPaused",
                    "json",
                    "pipelineName",
                    "teamName",
                    "yaml",
                    "id"
                ]
            }
        },
        "concourse:index/getTeam:getTeam": {
            "inputs": {
                "description": "A collection of arguments for invoking getTeam.\n",
                "properties": {
                    "teamName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "teamName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getTeam.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "members": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "owners": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "pipelineOperators": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "teamName": {
                        "type": "string"
                    },
                    "viewers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "members",
                    "owners",
                    "pipelineOperators",
                    "teamName",
                    "viewers",
                    "id"
                ]
            }
        },
        "concourse:index/getTeams:getTeams": {
            "outputs": {
                "description": "A collection of values returned by getTeams.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "names": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "names",
                    "id"
                ]
            }
        }
    },
    "language": {
        "csharp": {
            "compatibility": "tfbridge20",
            "namespaces": null,
            "packageReferences": {
                "Pulumi": "3.*",
                "System.Collections.Immutable": "1.6.0"
            }
        },
        "go": {
            "generateResourceContainerTypes": true,
            "importBasePath": "github.com/pulumi/pulumi-concourse/sdk/go/concourse"
        },
        "nodejs": {
            "compatibility": "tfbridge20",
            "dependencies": {
                "@pulumi/pulumi": "^3.0.0"
            },
            "devDependencies": {
                "@types/mime": "^2.0.0",
                "@types/node": "^10.0.0"
            },
            "disableUnionOutputTypes": true,
            "packageDescription": "A Pulumi package for creating and managing a Concourse instance \u0026 its pipelines.",
            "packageName": "",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/chanzuckerberg/terraform-provider-concourse)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi/pulumi-concourse` repo](https://github.com/pulumi/pulumi-concourse/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`chanzuckerberg/terraform-provider-concourse` repo](https://github.com/chanzuckerberg/terraform-provider-concourse/issues).",
            "typescriptVersion": ""
        },
        "python": {
            "compatibility": "tfbridge20",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/chanzuckerberg/terraform-provider-concourse)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi/pulumi-concourse` repo](https://github.com/pulumi/pulumi-concourse/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`chanzuckerberg/terraform-provider-concourse` repo](https://github.com/chanzuckerberg/terraform-provider-concourse/issues).",
            "requires": {
                "pulumi": "\u003e=3.0.0,\u003c4.0.0"
            }
        }
    }
}