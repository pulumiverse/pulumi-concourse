// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package concourse

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupPipeline(ctx *pulumi.Context, args *LookupPipelineArgs, opts ...pulumi.InvokeOption) (*LookupPipelineResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv LookupPipelineResult
	err := ctx.Invoke("concourse:index/getPipeline:getPipeline", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPipeline.
type LookupPipelineArgs struct {
	PipelineName string `pulumi:"pipelineName"`
	TeamName     string `pulumi:"teamName"`
}

// A collection of values returned by getPipeline.
type LookupPipelineResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id           string `pulumi:"id"`
	IsExposed    bool   `pulumi:"isExposed"`
	IsPaused     bool   `pulumi:"isPaused"`
	Json         string `pulumi:"json"`
	PipelineName string `pulumi:"pipelineName"`
	TeamName     string `pulumi:"teamName"`
	Yaml         string `pulumi:"yaml"`
}

func LookupPipelineOutput(ctx *pulumi.Context, args LookupPipelineOutputArgs, opts ...pulumi.InvokeOption) LookupPipelineResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupPipelineResult, error) {
			args := v.(LookupPipelineArgs)
			r, err := LookupPipeline(ctx, &args, opts...)
			var s LookupPipelineResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupPipelineResultOutput)
}

// A collection of arguments for invoking getPipeline.
type LookupPipelineOutputArgs struct {
	PipelineName pulumi.StringInput `pulumi:"pipelineName"`
	TeamName     pulumi.StringInput `pulumi:"teamName"`
}

func (LookupPipelineOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPipelineArgs)(nil)).Elem()
}

// A collection of values returned by getPipeline.
type LookupPipelineResultOutput struct{ *pulumi.OutputState }

func (LookupPipelineResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPipelineResult)(nil)).Elem()
}

func (o LookupPipelineResultOutput) ToLookupPipelineResultOutput() LookupPipelineResultOutput {
	return o
}

func (o LookupPipelineResultOutput) ToLookupPipelineResultOutputWithContext(ctx context.Context) LookupPipelineResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o LookupPipelineResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPipelineResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupPipelineResultOutput) IsExposed() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupPipelineResult) bool { return v.IsExposed }).(pulumi.BoolOutput)
}

func (o LookupPipelineResultOutput) IsPaused() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupPipelineResult) bool { return v.IsPaused }).(pulumi.BoolOutput)
}

func (o LookupPipelineResultOutput) Json() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPipelineResult) string { return v.Json }).(pulumi.StringOutput)
}

func (o LookupPipelineResultOutput) PipelineName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPipelineResult) string { return v.PipelineName }).(pulumi.StringOutput)
}

func (o LookupPipelineResultOutput) TeamName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPipelineResult) string { return v.TeamName }).(pulumi.StringOutput)
}

func (o LookupPipelineResultOutput) Yaml() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPipelineResult) string { return v.Yaml }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupPipelineResultOutput{})
}
