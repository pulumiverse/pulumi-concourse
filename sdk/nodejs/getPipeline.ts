// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getPipeline(args: GetPipelineArgs, opts?: pulumi.InvokeOptions): Promise<GetPipelineResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("concourse:index/getPipeline:getPipeline", {
        "pipelineName": args.pipelineName,
        "teamName": args.teamName,
    }, opts);
}

/**
 * A collection of arguments for invoking getPipeline.
 */
export interface GetPipelineArgs {
    pipelineName: string;
    teamName: string;
}

/**
 * A collection of values returned by getPipeline.
 */
export interface GetPipelineResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly isExposed: boolean;
    readonly isPaused: boolean;
    readonly json: string;
    readonly pipelineName: string;
    readonly teamName: string;
    readonly yaml: string;
}

export function getPipelineOutput(args: GetPipelineOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPipelineResult> {
    return pulumi.output(args).apply(a => getPipeline(a, opts))
}

/**
 * A collection of arguments for invoking getPipeline.
 */
export interface GetPipelineOutputArgs {
    pipelineName: pulumi.Input<string>;
    teamName: pulumi.Input<string>;
}
