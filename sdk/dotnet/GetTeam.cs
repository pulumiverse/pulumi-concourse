// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Concourse
{
    public static class GetTeam
    {
        public static Task<GetTeamResult> InvokeAsync(GetTeamArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetTeamResult>("concourse:index/getTeam:getTeam", args ?? new GetTeamArgs(), options.WithDefaults());

        public static Output<GetTeamResult> Invoke(GetTeamInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetTeamResult>("concourse:index/getTeam:getTeam", args ?? new GetTeamInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetTeamArgs : Pulumi.InvokeArgs
    {
        [Input("teamName", required: true)]
        public string TeamName { get; set; } = null!;

        public GetTeamArgs()
        {
        }
    }

    public sealed class GetTeamInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("teamName", required: true)]
        public Input<string> TeamName { get; set; } = null!;

        public GetTeamInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetTeamResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<string> Members;
        public readonly ImmutableArray<string> Owners;
        public readonly ImmutableArray<string> PipelineOperators;
        public readonly string TeamName;
        public readonly ImmutableArray<string> Viewers;

        [OutputConstructor]
        private GetTeamResult(
            string id,

            ImmutableArray<string> members,

            ImmutableArray<string> owners,

            ImmutableArray<string> pipelineOperators,

            string teamName,

            ImmutableArray<string> viewers)
        {
            Id = id;
            Members = members;
            Owners = owners;
            PipelineOperators = pipelineOperators;
            TeamName = teamName;
            Viewers = viewers;
        }
    }
}
