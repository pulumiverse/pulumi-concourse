// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Concourse
{
    [ConcourseResourceType("concourse:index/pipeline:Pipeline")]
    public partial class Pipeline : Pulumi.CustomResource
    {
        [Output("isExposed")]
        public Output<bool> IsExposed { get; private set; } = null!;

        [Output("isPaused")]
        public Output<bool> IsPaused { get; private set; } = null!;

        [Output("json")]
        public Output<string> Json { get; private set; } = null!;

        [Output("pipelineConfig")]
        public Output<string> PipelineConfig { get; private set; } = null!;

        [Output("pipelineConfigFormat")]
        public Output<string> PipelineConfigFormat { get; private set; } = null!;

        [Output("pipelineName")]
        public Output<string> PipelineName { get; private set; } = null!;

        [Output("teamName")]
        public Output<string> TeamName { get; private set; } = null!;

        [Output("yaml")]
        public Output<string> Yaml { get; private set; } = null!;


        /// <summary>
        /// Create a Pipeline resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Pipeline(string name, PipelineArgs args, CustomResourceOptions? options = null)
            : base("concourse:index/pipeline:Pipeline", name, args ?? new PipelineArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Pipeline(string name, Input<string> id, PipelineState? state = null, CustomResourceOptions? options = null)
            : base("concourse:index/pipeline:Pipeline", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "https://github.com/pulumiverse/pulumi-concourse/releases/download/${VERSION}",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Pipeline resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Pipeline Get(string name, Input<string> id, PipelineState? state = null, CustomResourceOptions? options = null)
        {
            return new Pipeline(name, id, state, options);
        }
    }

    public sealed class PipelineArgs : Pulumi.ResourceArgs
    {
        [Input("isExposed", required: true)]
        public Input<bool> IsExposed { get; set; } = null!;

        [Input("isPaused", required: true)]
        public Input<bool> IsPaused { get; set; } = null!;

        [Input("pipelineConfig", required: true)]
        public Input<string> PipelineConfig { get; set; } = null!;

        [Input("pipelineConfigFormat", required: true)]
        public Input<string> PipelineConfigFormat { get; set; } = null!;

        [Input("pipelineName", required: true)]
        public Input<string> PipelineName { get; set; } = null!;

        [Input("teamName", required: true)]
        public Input<string> TeamName { get; set; } = null!;

        public PipelineArgs()
        {
        }
    }

    public sealed class PipelineState : Pulumi.ResourceArgs
    {
        [Input("isExposed")]
        public Input<bool>? IsExposed { get; set; }

        [Input("isPaused")]
        public Input<bool>? IsPaused { get; set; }

        [Input("json")]
        public Input<string>? Json { get; set; }

        [Input("pipelineConfig")]
        public Input<string>? PipelineConfig { get; set; }

        [Input("pipelineConfigFormat")]
        public Input<string>? PipelineConfigFormat { get; set; }

        [Input("pipelineName")]
        public Input<string>? PipelineName { get; set; }

        [Input("teamName")]
        public Input<string>? TeamName { get; set; }

        [Input("yaml")]
        public Input<string>? Yaml { get; set; }

        public PipelineState()
        {
        }
    }
}
